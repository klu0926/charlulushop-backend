<div class="page">
  <!--speech-->
  <div class="speech">
    <img class="icon" src="/images/idea.png" alt="icon" />
    <div>
      <p class="info">在下方加入想要新增的<span>標籤</span></p>
      <p class="info">點擊想要<span>修改</span>或<span>刪除</span>的標籤會<span>跳出修改選項</span></p>
    </div>
  </div>
  <!--page--->
  <div class="addTagsPage"> 
      <!--tags-->
    <label>標籤</label>
    <div class="inputGroupGrid">
      <div class="resetInputGroup">
        <form class="" disabled="true">
           <input class="resetInput" id="tagInput" type="text" placeholder="新增標籤..." autocomplete="off">
          <button class="resetButton" type="reset">x</button>
        </form>
      </div>
      <button id="addBtn" type="button">新增</button>
    </div>
     <div class="inputGroup">
      <div id="tagsContainer" class="tagsContainer">
      </div>
    </div>
  </div>
  </div>

  <!--template tag-->
<div class="d-none">
<label class="tagLabel">
  <input class="tagCheckbox" type="checkbox" id="myCheckbox">
  <span class="tagSpan">Tag Name here</span>
    <span class="tagItemsCount">0</span>
</label>
</div>


  <script type="module">
  import TagClass from '/js/TagClass.js'
  import swal from '/js/sweetAlert.js'

  // tags
  const tagsContainer = document.querySelector('#tagsContainer')
  const tagLabelTemp = document.querySelector('.tagLabel')
  const tagsCount = document.querySelector('#tagsCount')
  const tagInput = document.querySelector('#tagInput')
  const addButton = document.querySelector('#addBtn')

  // overwrite TagClass click handler
  async function  tagClickHandler(e){
    e.preventDefault()
    const checkbox = e.target
    if (!checkbox.classList.contains('tagCheckbox')) return
    const label = checkbox.parentElement
    const tagId = label.dataset.id
    const tagName = label.querySelector('.tagSpan').innerText
    await editTag(tagId, tagName)
  }

  async function editTag(tagId, tagName){
    try{
      if(!tagId || !tagName) return
      const result  = await swal.editTagInput('修改標籤', tagName, '要修改的名稱...')
      const newName = result.value
       // --- 修改標籤
      if (result.isConfirmed || newName){
        const url = `/api/tags/${tagId}`
        const response = await fetch(url, {
          headers: {
            'Content-Type': 'application/json'
          },
          method: "PUT",
          body: JSON.stringify({tagName : newName})
        })
        const json = await response.json()
        if (!json.ok) throw new Error(json.err)
        // 修改成功
        await swal.success('成功修改標題',newName)
        window.location.reload()
      } 

      // ---- 刪除標籤
      if (result.isDenied){
        // 再次確認
        const result = await swal.confirm('你確定要刪除嗎？', `${tagName}`)
        if (!result.value) {
          return
        }
        // 刪除
        const url = `/api/tags/${tagId}`
        const response = await fetch(url, {
          method: 'DELETE'
        })
        // 刪除成功
        const json = await response.json()
        if (!json.ok) throw new Error(json.err)
        await swal.notice('刪除成功', 'success', `${tagName}`)
        window.location.reload()
        return
      }
    }catch(err){
      await swal.error('失敗', err.message)
       window.location.reload()
    }
  }

  async function addButtonClickHandler(e){
    try{
    if (tagInput.value){
      const json = await tagClass.postTag(tagInput.value)
      if(!json.ok) throw new Error(json.err)
      await swal.success('新增成功', tagInput.value)
      window.location.reload()
    }
    }catch(err) {
      await swal.error('新增失敗', err)
    }
  }


  // Init
  const tagClass = new TagClass(tagsContainer, tagLabelTemp, null, tagsCount, tagClickHandler)
  tagClass.renderAllTags()

  // Action
  addButton.onclick = addButtonClickHandler

  </script>